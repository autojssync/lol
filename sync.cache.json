{"t1517480926051854341":{"body":"const electron      = require('electron');\nconst app           = electron.app;\nconst BrowserWindow = electron.BrowserWindow;\nconst {ipcMain}     = require('electron');\n\nconst path = require('path');\nconst url  = require('url');\nconst fs   = require('fs');\n\nconst request    = require('request');\nconst _          = require('lodash');\nconst uuid       = require('uuid/v4');\nconst now        = require('nano-time');\nconst TextUpload = require('./text-uploader');\n\nconst github = require('octonode');\nconst client = github.client('095e568d5bfd5d9f5fdf3f955319d7e74cc2424d');\nconst ghrepo = client.repo('autojssync/lol');\n\nconst syncFile = './sync.cache.json';\n\nclass Application {\n\n  constructor() {\n    this.mainWindow      = null;\n    this.runScriptWindow = null;\n    this.isRunning       = false;\n    this.quit            = false;\n  }\n\n  runScript(script, closeScript, success) {\n    this.isRunning = true;\n    script         = `\n    const destroyScript = () => {\n      (require('electron').remote).getCurrentWindow().close();\n    };\n    ${script}\n    `.trim();\n    fs.writeFileSync('web/script.js', script);\n    this.runScriptWindow = new BrowserWindow({\n      // width:  200,\n      // height: 80\n      // frame:  false\n      show: false\n    });\n    this.runScriptWindow.loadURL(url.format({\n      pathname: path.join(__dirname, 'web/script.html'),\n      protocol: 'file:',\n      slashes:  true\n    }));\n    this.runScriptWindow.setMenu(null);\n    this.runScriptWindow.on('closed', () => {\n      this.runScriptWindow = null;\n      if(closeScript) {\n        this.runScript(closeScript, null, success);\n      } else {\n        this.isRunning = false;\n        let mySelf     = this;\n        success && success(() => {\n          if(mySelf.quit) {\n            app.quit();\n          }\n        });\n      }\n    });\n  }\n\n  getSha(callback) {\n    if(fs.existsSync('./sha.txt')) {\n      callback && callback(fs.readFileSync('./sha.txt').toString());\n    } else {\n      ghrepo.contents('sync.cache.json', (a, b) => {\n        callback && callback(b.sha);\n      });\n    }\n  }\n\n  listen() {\n    ipcMain.on('login', (event, arg) => {\n      event.sender.send('login', {\n        stt: 'success'\n      });\n    });\n    //\n    const skySync = (event, local) => {\n      if(local && fs.existsSync(syncFile)) {\n        return event.sender.send('sync', JSON.parse(fs.readFileSync(syncFile)));\n      }\n      try {\n        ghrepo.contents('sync.cache.json', (a, b) => {\n          let body = '{}';\n          if(b && b.content) {\n            fs.writeFileSync('./sha.txt', b.sha);\n            body = Buffer.from(b.content, 'base64').toString('utf-8');\n          }\n          body = JSON.parse(body);\n          fs.writeFileSync(syncFile, JSON.stringify(body));\n          event.sender.send('sync', body);\n        });\n      } catch(e) {\n      }\n    };\n    const skyAdd  = (event, arg) => {\n      let data = {\n        body:  arg.body,\n        name:  arg.name,\n        close: arg.close\n      };\n      if(arg.id) {\n        data._id = arg.id;\n      } else {\n        data._id = 't' + now();\n      }\n      let db = {};\n      if(fs.existsSync(syncFile)) {\n        db = JSON.parse(fs.readFileSync(syncFile));\n      }\n      db[data._id] = data;\n      fs.writeFileSync(syncFile, JSON.stringify(db));\n      skySync(event, true);\n    };\n    ipcMain.on('sync', (event, arg) => {\n      skySync(event, arg);\n    });\n    ipcMain.on('add', (event, arg) => {\n      skyAdd(event, arg);\n    });\n    ipcMain.on('detete', (event, arg) => {\n      let db = {};\n      if(fs.existsSync(syncFile)) {\n        db = JSON.parse(fs.readFileSync(syncFile));\n      }\n      delete db[arg];\n      fs.writeFileSync(syncFile, JSON.stringify(db));\n      skySync(event, true);\n    });\n    ipcMain.on('sync-up', (event) => {\n      if(fs.existsSync(syncFile)) {\n        let list       = JSON.parse(fs.readFileSync(syncFile));\n        list.last_sync = new Date().getTime();\n        this.getSha((sha) => {\n          ghrepo.updateContents('sync.cache.json', 'hi', JSON.stringify(list), sha, (a, b) => {\n            if(b && b.content) {\n              fs.writeFileSync('./sha.txt', b.content.sha);\n            }\n            fs.writeFileSync(syncFile, JSON.stringify(list));\n            event.sender.send('sync-up', list.last_sync);\n          });\n        });\n      } else {\n        event.sender.send('sync-up');\n      }\n    });\n    ipcMain.on('run', (event, arg) => {\n      if(arg.type==='stop') {\n        if(this.runScriptWindow) {\n          this.runScriptWindow.close();\n        }\n      } else {\n        skyAdd(event, {\n          id:    arg._id,\n          name:  arg.name,\n          body:  arg.body,\n          close: arg.close\n        });\n        this.runScript(arg.body, (arg.close || '').trim(), (next) => {\n          arg.type = 'stop';\n          try {\n            event.sender.send('run', arg);\n          } catch(e) {\n          }\n          next();\n        });\n      }\n    });\n  }\n\n  createWindow() {\n    this.listen();\n    this.mainWindow = new BrowserWindow({\n      width:  800,\n      height: 600\n      // frame:  false\n    });\n    this.mainWindow.loadURL(url.format({\n      pathname: path.join(__dirname, 'web/index.html'),\n      protocol: 'file:',\n      slashes:  true\n    }));\n    this.mainWindow.on('closed', () => {\n      this.quit       = true;\n      this.mainWindow = null;\n      if(this.runScriptWindow) {\n        this.runScriptWindow.close();\n      }\n      setTimeout(() => {\n        app.quit();\n      }, 60000 * 5);\n    });\n    // this.mainWindow.setMenu(null);\n  }\n\n}\n\nconst application = new Application();\napp.on('ready', () => application.createWindow());\napp.on('window-all-closed', () => {\n  if(process.platform!=='darwin') {\n    application.quit = true;\n    if(!application.isRunning) {\n      app.quit();\n    }\n  }\n});\napp.on('activate', () => {\n  if(application.mainWindow===null) {\n    application.createWindow();\n  }\n});","name":"Untitled","close":"","_id":"t1517480926051854341"},"last_sync":1517481234785}